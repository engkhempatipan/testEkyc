//id 'com.android.library'
plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    repositories {
        google()
        jcenter()
        maven {
            setAllowInsecureProtocol(true)
            url "http://localhost:8081/repository/maven-releases/"
        }
    }

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.4.0'

    def mobileUiDependencies = rootProject.ext.mobileUiDependencies
    def domainDependencies = rootProject.ext.domainDependencies
    def remoteDependencies = rootProject.ext.remoteDependencies
    def dataDependencies = rootProject.ext.dataDependencies
    def cacheDependencies = rootProject.ext.cacheDependencies
    def cacheTestDependencies = rootProject.ext.cacheTestDependencies
    //ui
    implementation mobileUiDependencies.javaxAnnotation

    implementation mobileUiDependencies.kotlin
    implementation mobileUiDependencies.javaxInject
    implementation mobileUiDependencies.rxKotlin
    implementation mobileUiDependencies.androidAnnotations
    implementation mobileUiDependencies.androidSupportV4
    implementation mobileUiDependencies.androidSupportV13
    implementation mobileUiDependencies.appCompatV7
    implementation mobileUiDependencies.supportRecyclerView
    implementation mobileUiDependencies.supportDesign
    implementation mobileUiDependencies.timber
    implementation mobileUiDependencies.rxAndroid
    implementation mobileUiDependencies.glide
    implementation mobileUiDependencies.dagger
    implementation mobileUiDependencies.daggerSupport
    implementation mobileUiDependencies.mockito
    implementation 'org.greenrobot:eventbus:3.1.1'
    testImplementation mobileUiTestDependencies.kotlinJUnit
    //dagger
    kapt mobileUiDependencies.daggerCompiler
    kapt mobileUiDependencies.daggerProcessor
    compileOnly mobileUiDependencies.glassfishAnnotation


    //domain
    implementation domainDependencies.javaxAnnotation
    implementation domainDependencies.javaxInject
    implementation domainDependencies.rxKotlin
    implementation domainDependencies.kotlin


    //Remote
    implementation remoteDependencies.kotlin
    implementation remoteDependencies.javaxInject
    implementation remoteDependencies.rxKotlin
    implementation remoteDependencies.gson
    implementation remoteDependencies.okHttp
    implementation remoteDependencies.okHttpLogger
    implementation remoteDependencies.retrofit
    implementation remoteDependencies.retrofitConverter
    implementation remoteDependencies.retrofitAdapter

    //data
    implementation dataDependencies.kotlin
    implementation dataDependencies.javaxInject
    implementation dataDependencies.rxKotlin

    testImplementation cacheTestDependencies.junit
    testImplementation cacheTestDependencies.kotlinJUnit
    testImplementation cacheTestDependencies.mockito
    testImplementation cacheTestDependencies.assertj
    testImplementation cacheTestDependencies.robolectric

    //cache
    implementation cacheDependencies.kotlin
    implementation cacheDependencies.javaxInject
    implementation cacheDependencies.rxKotlin
    implementation cacheDependencies.gson

    //Test
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Instrumentation test dependencies
    androidTestImplementation mobileUiTestDependencies.junit
    androidTestImplementation mobileUiTestDependencies.mockito
    androidTestImplementation mobileUiTestDependencies.mockitoAndroid
    androidTestImplementation(mobileUiTestDependencies.espressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.androidRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.androidRules) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.espressoIntents) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.espressoContrib) {
        exclude module: 'appcompat'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    }

    kaptTest mobileUiDependencies.daggerCompiler
    kaptAndroidTest mobileUiDependencies.daggerCompiler

//    implementation files('facetec/facetec-sdk-9.4.4.aar')

//    configurations.maybeCreate("default")
//    artifacts.add("default", file('facetec-sdk-9.4.4.aar'))
//    implementation project(path: ':domain')
//    implementation project(path: ':facetec', configuration = "default")
    implementation project(path: ':facetec')
//    implementation("io.scb:facetec:1@aar")
}

androidExtensions {
    experimental = true
}


ext {
    PUBLISH_GROUP_ID = 'io.ekyc.demo'
    PUBLISH_VERSION = '1.0.0'
    PUBLISH_ARTIFACT_ID = 'ekyc'
}
apply plugin: 'maven-publish'
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = PUBLISH_GROUP_ID
                artifactId = PUBLISH_ARTIFACT_ID
                version = PUBLISH_VERSION
            }
        }
    }
}