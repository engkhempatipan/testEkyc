package com.my.ekyc.ui.main.activity

import android.content.Intent
import android.os.Bundle
import android.util.Log
import android.view.Menu
import android.view.MenuItem
import android.view.View
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.facetec.sdk.FaceTecSDK
import com.facetec.sdk.FaceTecSessionResult
import com.my.ekyc.processors.Config
import com.my.ekyc.processors.Processor
import com.my.ekyc.R
import com.my.ekyc.processors.LivenessCheckProcessor
import com.my.ekyc.processors.NetworkingHelpers
import com.my.ekyc.ui.main.adapter.SimpleFragmentPagerAdapter
import com.my.ekyc.ui.main.dialog.SortMenuDialogFragment
import com.my.ekyc.ui.main.presenter.MainContract
import dagger.android.AndroidInjection
import kotlinx.android.synthetic.main.activity_main_lib.tab_layout
import kotlinx.android.synthetic.main.activity_main_lib.view_pager
import okhttp3.Call
import okhttp3.Callback
import okhttp3.Request
import okhttp3.Response
import org.json.JSONException
import org.json.JSONObject
import java.io.IOException

import javax.inject.Inject

class MainActivity : AppCompatActivity(), MainContract.View {
    var latestSessionResult: FaceTecSessionResult? = null
    var latestProcessor: Processor? = null
    @Inject
    lateinit var mainPresenter: MainContract.Presenter

    private var pagerAdapter =
        SimpleFragmentPagerAdapter(supportFragmentManager)

    override fun setPresenter(presenter: MainContract.Presenter) {
        mainPresenter = presenter
    }

    override fun onStart() {
        super.onStart()
        mainPresenter.start()
    }

    override fun onStop() {
        super.onStop()
        mainPresenter.stop()
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main_lib)
        AndroidInjection.inject(this)
        title = resources.getString(R.string.app_title)
        setupTabView()

        Log.d("khem","HELLO_1")
        Config.initializeFaceTecSDKFromAutogeneratedConfig(this, object : FaceTecSDK.InitializeCallback() {
            override fun onCompletion(successful: Boolean) {
                Log.d("khem","HELLO_2")
                if (successful) {
                    Log.d("khem","HELLO_3")
                    Toast.makeText(this@MainActivity, "Initialize Success", Toast.LENGTH_LONG)
                        .show()
                }
            }
        })
    }

    override fun onCreateOptionsMenu(menu: Menu?): Boolean {
        val menu = menuInflater.inflate(R.menu.menu, menu)
        return true
    }

    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        item.let {
            if (it.itemId == R.id.menu_icon) {
                mainPresenter.onSortMenuClicked()
                return true
            }
        }
        return true

    }

    private fun setupTabView() {
        view_pager?.apply {
            adapter = pagerAdapter
            isHorizontalScrollBarEnabled = false
        }
        tab_layout?.setupWithViewPager(view_pager)
    }

    override fun showSortByDialog(key: String) {
        val dailog = SortMenuDialogFragment.newInstance(key)
        dailog.setListener(object : SortMenuDialogFragment.SortMenuDialogFragmentListener {
            override fun onClickedSortByPriceHighToLow() {
                mainPresenter.setSortByPriceHighToLow()
                pagerAdapter.notifyDataSetChanged()
            }

            override fun onClickedSortByPriceLowToHigh() {
                mainPresenter.setSortByPriceLowToHigh()
                pagerAdapter.notifyDataSetChanged()
            }

            override fun onClickedSortByRating() {
                mainPresenter.setSortByRating()
                pagerAdapter.notifyDataSetChanged()
            }
        })
        dailog.isCancelable = true
        dailog.show(supportFragmentManager, SortMenuDialogFragment::class.simpleName)
    }

}
